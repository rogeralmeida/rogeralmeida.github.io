---
layout: post
title: "Roger's golden list of books for developers"
date: 2017-12-03 11:31:31 +0000
comments: true
---
:markdown
  A good book has the power to change yourself and your career. Along the years I've collected some books that I believe every developer would benefit reading from.

<!-- more -->

:markdown
  I compiled this list based on my own experience and recommendations from friends and other people I respect.

  ## Must
  The books on this section are the masterpieces of software development. They describe the fundamentals of our industry. If you are missing any book in this section make sure you cover the gap ASAP. IMHO every software developer must read all the books on this section.

  ### Agile Software Development: Principles, Patterns and Practices by Robert C. Martin 
  This is a fundamental book. Uncle bob gives a succint and effective explanation about how to run a Agile Software Development project. He covers the fundamentals of eXtreme Programming and agile software development. Then he progresses to how to implement those ideas giving examples of planning, testing and refactoring. But don't assume this is a book for managers and teams leaders only. He covers in details object oriented patterns that give agility to a project. I first read this book in 2007 and still believe this is one of the most important book in the history of software development. It changed my mind about Agile Software Development and still my reference about the intentions behind the agile manifesto.

  ### Design Patterns: Elements of Reusable Object Oriented Softare by Erich Gamma, Richard Helm, Ralph Johnson, and John M. Vlissides
  The book that popularised the design patterns that everybody still talking. More than 10 years later this book still a must for every software developers. I found the first part of the book the most valuable one. Although there is no questions regards the pattern catalog. What they explain at the begin of the book is enourmously valuable.

  ### Domain Driven Design: Tackling Complexity in the Heart of Software by Eric Evans
  Many people are seeking the answer to the question: "How small should a Micro-Service be?" The answer is inside this book. Eric Evans wrote one of the most influential books of all times. All the patterns that he describe are mandatory in almost all software development project. I didn't find it a easy read, he talks about many abstract part. I had a hard time to finish the first part of the book, but the second is pure gold. In the last part he answers the question about the size of Micro Services (before the micro-services book had a single line).

  ### Effective Java by Joshua Bloch
  OK, you might say "But I'm not a java developer. Why should I ever read a book about Java". Trust me, it just happens that this book was writen with Java in mind. But the patterns and suggestions he mentions can be applyed to all major languages. Do you want to know how to effectively use exceptions on your code? Read this book.

  ### eXtreme Programming Explained: Embrace Change by Kent Beck and Cynthia Andres
  XP never had the same level of adoption that scrum has, but it is for sure much more complete in terms of understanding the details of a software development project. Kent Beck captures the essence of delivering software products that not only satifies the final user but also bring pleasure to the development team. This simple detail can make the difference between a failure and a product that excel the expectations.

  ### Patterns of Enterprise Application Architecture by Martin Fowler
  Mr. Fowler, the biggest author in our industry. In this book he capture common patters to solve problems that you can face in any company. Different from the other design patterns books that focus on how to make your code more readable this book will focus on making the problem that you have at hand more readble. 

  ### Refactoring: Improving the Design of Existing Code by Martin Fowler, Kent Beck, John Brant, and William Opdyke
  What happens when you mix Martin Fowler, Kent Beck and other two great software developers to write a book? You end-up with this threasure in for of book: Refactoring. This book openned my eyes to how to move a code that seems mediocre to a great code taking safe steps.

  ### Test Driven Development By Example Kent Beck
  I still wonder about what Kent Beck and Ward Cunningham smoked to create such a controversial way to write good code. TDD changed completed the way I solved problems in my mind. Instead of have the whole design in my head, now I have only the high level direction I want to take and I rely on the TDD to guide my steps towards the goal. This bookexplain the process of TDD and show some usefull patterns applyed to TDD. Although I believe TDD is something you learning by doing, you still must read this book to make sure you can extract all the power of this fantastic technique.
  ### The Mythical Man-Month: Essays on Software Engineering Frederick P. Brooks
  Can 9 women produce 1 baby in 1 month? If you like this analogy you must read this book. This is a old but gold book. I would just recommend you to have some experience before reading this book as this is heavy and deep conversation.

  ### Working Effectively with Legacy Code Michael Feathers

  ## Should
  ## Nice to read
